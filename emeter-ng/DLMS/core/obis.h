//--------------------------------------------------------------------------
//
//  Software for MSP430 based e-meters.
//
//  THIS PROGRAM IS PROVIDED "AS IS". TI MAKES NO WARRANTIES OR
//  REPRESENTATIONS, EITHER EXPRESS, IMPLIED OR STATUTORY, 
//  INCLUDING ANY IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS 
//  FOR A PARTICULAR PURPOSE, LACK OF VIRUSES, ACCURACY OR 
//  COMPLETENESS OF RESPONSES, RESULTS AND LACK OF NEGLIGENCE. 
//  TI DISCLAIMS ANY WARRANTY OF TITLE, QUIET ENJOYMENT, QUIET 
//  POSSESSION, AND NON-INFRINGEMENT OF ANY THIRD PARTY 
//  INTELLECTUAL PROPERTY RIGHTS WITH REGARD TO THE PROGRAM OR 
//  YOUR USE OF THE PROGRAM.
//
//  IN NO EVENT SHALL TI BE LIABLE FOR ANY SPECIAL, INCIDENTAL, 
//  CONSEQUENTIAL OR INDIRECT DAMAGES, HOWEVER CAUSED, ON ANY 
//  THEORY OF LIABILITY AND WHETHER OR NOT TI HAS BEEN ADVISED 
//  OF THE POSSIBILITY OF SUCH DAMAGES, ARISING IN ANY WAY OUT 
//  OF THIS AGREEMENT, THE PROGRAM, OR YOUR USE OF THE PROGRAM. 
//  EXCLUDED DAMAGES INCLUDE, BUT ARE NOT LIMITED TO, COST OF 
//  REMOVAL OR REINSTALLATION, COMPUTER TIME, LABOR COSTS, LOSS 
//  OF GOODWILL, LOSS OF PROFITS, LOSS OF SAVINGS, OR LOSS OF 
//  USE OR INTERRUPTION OF BUSINESS. IN NO EVENT WILL TI'S 
//  AGGREGATE LIABILITY UNDER THIS AGREEMENT OR ARISING OUT OF 
//  YOUR USE OF THE PROGRAM EXCEED FIVE HUNDRED DOLLARS 
//  (U.S.$500).
//
//  Unless otherwise stated, the Program written and copyrighted 
//  by Texas Instruments is distributed as "freeware".  You may, 
//  only under TI's copyright in the Program, use and modify the 
//  Program without any charge or restriction.  You may 
//  distribute to third parties, provided that you transfer a 
//  copy of this license to the third party and the third party 
//  agrees to these terms by its first use of the Program. You 
//  must reproduce the copyright notice and any other legend of 
//  ownership on each copy or partial copy, of the Program.
//
//  You acknowledge and agree that the Program contains 
//  copyrighted material, trade secrets and other TI proprietary 
//  information and is protected by copyright laws, 
//  international copyright treaties, and trade secret laws, as 
//  well as other intellectual property laws.  To protect TI's 
//  rights in the Program, you agree not to decompile, reverse 
//  engineer, disassemble or otherwise translate any object code 
//  versions of the Program to a human-readable form.  You agree 
//  that in no event will you alter, remove or destroy any 
//  copyright notice included in the Program.  TI reserves all 
//  rights not specifically granted under this license. Except 
//  as specifically provided herein, nothing in this agreement 
//  shall be construed as conferring by implication, estoppel, 
//  or otherwise, upon you, any license or other right under any 
//  TI patents, copyrights or trade secrets.
//
//  You may not use the Program in non-TI devices.
//
//  File: obis.h
//
//  Steve Underwood <steve-underwood@ti.com>
//  Texas Instruments Hong Kong Ltd.
//
//  $Id: obis.h,v 1.3 2010/05/13 07:47:37 a0393626 Exp $
//
//
//--------------------------------------------------------------------------
//

#if !defined(_OBIS_H_)
#define _OBIS_H_

typedef enum
{
    CLASS_ID_DATA = 1,
    CLASS_ID_REGISTER = 3,
    CLASS_ID_EXTENDED_REGISTER = 4,
    CLASS_ID_DEMAND_REGISTER = 5,
    CLASS_ID_REGISTER_ACTIVATION = 6,
    CLASS_ID_PROFILE_GENERIC = 7,
    CLASS_ID_CLOCK = 8,
    CLASS_ID_SCRIPT_TABLE = 9,
    CLASS_ID_SCHEDULE = 10,
    CLASS_ID_SPECIAL_DAYS = 11,
    CLASS_ID_ASSOCIATION_SN = 12,
    CLASS_ID_ASSOCIATION_LN = 15,
    CLASS_ID_SAP_ASSIGNMENT = 17,
    CLASS_ID_IMAGE_TRANSFER = 18,
    CLASS_ID_IEC_LOCAL_PORT_SETUP = 19,
    CLASS_ID_ACTIVITY_CALENDAR = 20,
    CLASS_ID_REGISTER_MONITOR = 21,
    CLASS_ID_SINGLE_ACTION_SCHEDULE = 22,
    CLASS_ID_IEC_HDLC_SETUP = 23,
    CLASS_ID_IEC_TWISTED_PAIR_SETUP = 24,
    CLASS_ID_MBUS_PORT_SETUP = 25,
    CLASS_ID_UTILITY_TABLES = 26,
    CLASS_ID_PSTN_MODEM_CONFIG = 27,
    CLASS_ID_PSTN_AUTO_ANSWER = 28,
    CLASS_ID_PSTN_AUTO_DIAL = 29,
    CLASS_ID_TCP_UDP_SETUP = 41,
    CLASS_ID_IPV4_SETUP = 42,
    CLASS_ID_ETHERNET_SETUP = 43,
    CLASS_ID_PPP_SETUP = 44,
    CLASS_ID_GPRS_MODEM_SETUP = 45,
    CLASS_ID_SMTP_SETUP = 46,
    CLASS_ID_SFSK_PHY_MAC_SETUP = 50,
    CLASS_ID_SFSK_ACTIVE_INITIATOR = 51,
    CLASS_ID_SFSK_MAC_SYNC_TIMEOUTS = 52,
    CLASS_ID_SFSK_MAC_COUNTERS = 53,
    CLASS_ID_SFSK_IEC61334_4_32_LLC_SETUP = 55,
    CLASS_ID_SFSK_REPORTING_SYSTEM_LIST = 56,
    CLASS_ID_IEC8802_2_TYPE_1_SETUP = 57,
    CLASS_ID_IEC8802_2_TYPE_2_SETUP = 58,
    CLASS_ID_IEC8802_2_TYPE_3_SETUP = 59,
    CLASS_ID_REGISTER_TABLE = 61,
    CLASS_ID_STATUS_MAPPING = 63,
    CLASS_ID_SECURITY_SETUP = 64,
    CLASS_ID_DISCONNECT_CONTROL = 70,
    CLASS_ID_LIMITER = 71,
    CLASS_ID_MBUS_CLIENT = 72,
    CLASS_ID_BALANCE = 73,
    CLASS_ID_CALIBRATION = 74,
    CLASS_ID_PRIME_PLC_App_ID = 86,

} class_id_t;

/* IEC62056-62 5.1 */
typedef enum
{
    CLASS_DATA_LOGICAL_NAME = 1,
    CLASS_DATA_VALUE = 2
} data_attributes_t;

/* IEC62056-62 5.2 */
typedef enum
{
    CLASS_REGISTER_LOGICAL_NAME = 1,
    CLASS_REGISTER_VALUE = 2,
    CLASS_REGISTER_SCALER_UNIT = 3
} register_attributes_t;

/* IEC62056-62 5.3 */
typedef enum
{
    CLASS_EXTENDED_REGISTER_LOGICAL_NAME = 1,
    CLASS_EXTENDED_REGISTER_VALUE = 2,
    CLASS_EXTENDED_REGISTER_SCALER_UNIT = 3,
    CLASS_EXTENDED_REGISTER_STATUS = 4,
    CLASS_EXTENDED_REGISTER_CAPTURE_TIME = 5
} extended_register_attributes_t;

/* IEC62056-62 5.4 */
typedef enum
{
    CLASS_DEMAND_REGISTER_LOGICAL_NAME = 1,
    CLASS_DEMAND_REGISTER_CURRENT_AVERAGE_VALUE = 2,
    CLASS_DEMAND_REGISTER_LAST_AVERAGE_VALUE = 3,
    CLASS_DEMAND_REGISTER_SCALER_UNIT = 4,
    CLASS_DEMAND_REGISTER_STATUS = 5,
    CLASS_DEMAND_REGISTER_CAPTURE_TIME = 6,
    CLASS_DEMAND_REGISTER_START_TIME_CURRENT = 7,
    CLASS_DEMAND_REGISTER_PERIOD = 8,
    CLASS_DEMAND_REGISTER_NUMBER_OF_PERIODS = 9
} demand_register_attributes_t;

/* IEC62056-62 5.5 */
typedef enum
{
    CLASS_REGISTER_ACTIVATION_LOGICAL_NAME = 1,
    CLASS_REGISTER_ACTIVATION_REGISTER_ASSIGNMENT = 2,
    CLASS_REGISTER_ACTIVATION_MASK_LIST = 3,
    CLASS_REGISTER_ACTIVATION_ACTIVE_MASK = 4
} register_activation_attributes_t;

/* IEC62056-62 5.6 */
typedef enum
{
    CLASS_PROFILE_GENERIC_LOGICAL_NAME = 1,
    CLASS_PROFILE_GENERIC_BUFFER = 2,
    CLASS_PROFILE_GENERIC_CAPTURE_OBJECTS = 3,
    CLASS_PROFILE_GENERIC_CAPTURE_PERIOD = 4,
    CLASS_PROFILE_GENERIC_SORT_METHOD = 5,
    CLASS_PROFILE_GENERIC_SORT_OBJECT = 6,
    CLASS_PROFILE_GENERIC_ENTRIES_IN_USE = 7,
    CLASS_PROFILE_GENERIC_PROFILE_ENTRIES = 8
} profile_generic_attributes_t;

/* IEC62056-62 5.7 */
typedef enum
{
    CLASS_CLOCK_LOGICAL_NAME = 1,
    CLASS_CLOCK_TIME = 2,
    CLASS_CLOCK_TIME_ZONE = 3,
    CLASS_CLOCK_STATUS = 4,
    CLASS_CLOCK_DAYLIGHT_SAVINGS_BEGIN = 5,
    CLASS_CLOCK_DAYLIGHT_SAVINGS_END = 6,
    CLASS_CLOCK_DAYLIGHT_SAVINGS_DEVIATION = 7,
    CLASS_CLOCK_DAYLIGHT_SAVINGS_ENABLED = 8,
    CLASS_CLOCK_BASE = 9
} clock_attributes_t;

/* IEC62056-62 5.8 */
typedef enum
{
    CLASS_SCRIPT_TABLE_LOGICAL_NAME = 1,
    CLASS_SCRIPT_TABLE_SCRIPTS = 2
} script_table_attributes_t;

/* IEC62056-62 5.9 */
typedef enum
{
    CLASS_SCHEDULE_LOGICAL_NAME = 1,
    CLASS_SCHEDULE_ENTRIES = 2
} schedule_attributes_t;

/* IEC62056-62 5.10 */
typedef enum
{
    CLASS_SPECIAL_DAYS_LOGICAL_NAME = 1,
    CLASS_SPECIAL_DAYS_ENTRIES = 2
} special_days_attributes_t;

/* IEC62056-62 5.11 */
typedef enum
{
    CLASS_ACTIVITY_CALENDAR_LOGICAL_NAME = 1,
    CLASS_ACTIVITY_CALENDAR_CALENDAR_NAME_ACTIVE = 2,
    CLASS_ACTIVITY_CALENDAR_SEASON_PROFILE_ACTIVE = 3,
    CLASS_ACTIVITY_CALENDAR_WEEK_PROFILE_TABLE_ACTIVE = 4,
    CLASS_ACTIVITY_CALENDAR_DAY_PROFILE_TABLE_ACTIVE = 5,
    CLASS_ACTIVITY_CALENDAR_CALENDAR_NAME_PASSIVE = 6,
    CLASS_ACTIVITY_CALENDAR_SEASON_PROFILE_PASSIVE = 7,
    CLASS_ACTIVITY_CALENDAR_WEEK_PROFILE_TABLE_PASSIVE = 8,
    CLASS_ACTIVITY_CALENDAR_DAY_PROFILE_TABLE_PASSIVE = 9,
    CLASS_ACTIVITY_CALENDAR_ACTIVE_PASSIVE_CALENDAR_TIME = 10
} activity_calendar_attributes_t;

/* IEC62056-62 5.12 */
typedef enum
{
    CLASS_ASSOCIATION_LN_LOGICAL_NAME = 1,
    CLASS_ASSOCIATION_LN_OBJECT_LIST = 2,
    CLASS_ASSOCIATION_LN_ASSOCIATED_PARTNERS_ID = 3,
    CLASS_ASSOCIATION_LN_APPLICATION_CONTEXT_NAME = 4,
    CLASS_ASSOCIATION_LN_XDLMS_CONTEXT_INFO = 5,
    CLASS_ASSOCIATION_LN_AUTHENTICATION_MECHANISM_NAME = 6,
    CLASS_ASSOCIATION_LN_LLS_SECRET = 7,
    CLASS_ASSOCIATION_LN_ASSOCIATION_STATUS = 8,
    CLASS_ASSOCIATION_LN_SECURITY_SETUP_REFERENCE = 9
} association_ln_attributes_t;

typedef enum
{
    CLASS_ASSOCIATION_LN_REPLY_TO_HLS_AUTHENTICATION = 1,
    CLASS_ASSOCIATION_LN_CHANGE_HLS_SECRET = 2,
    CLASS_ASSOCIATION_LN_ADD_OBJECT = 3,
    CLASS_ASSOCIATION_LN_REMOVE_OBJECT = 4
} association_ln_methods_t;

/* IEC62056-62 5.13 */
typedef enum
{
    CLASS_ASSOCIATION_SN_LOGICAL_NAME = 1,
    CLASS_ASSOCIATION_SN_OBJECT_LIST = 2
} association_sn_attributes_t;

/* IEC62056-62 5.14 */
typedef enum
{
    CLASS_SAP_ASSIGNMENT_LOGICAL_NAME = 1,
    CLASS_SAP_ASSIGNMENT_LIST = 2
} sap_assignment_attributes_t;

/* IEC62056-62 5.15 */
typedef enum
{
    CLASS_REGISTER_MONITOR_LOGICAL_NAME = 1,
    CLASS_REGISTER_MONITOR_THRESHOLDS = 2,
    CLASS_REGISTER_MONITOR_MONITORED_VALUE = 3,
    CLASS_REGISTER_MONITOR_ACTIONS = 4
} register_monitor_attributes_t;

/* IEC62056-62 5.16 */
typedef enum
{
    CLASS_UTILITY_TABLES_LOGICAL_NAME = 1,
    CLASS_UTILITY_TABLES_TABLE_ID = 2,
    CLASS_UTILITY_TABLES_LENGTH = 3,
    CLASS_UTILITY_TABLES_BUFFER = 4
} utility_tables_attributes_t;

/* IEC62056-62 5.17 */
typedef enum
{
    CLASS_SINGLE_ACTION_SCHEDULE_LOGICAL_NAME = 1,
    CLASS_SINGLE_ACTION_SCHEDULE_EXECUTED_SCRIPT = 2,
    CLASS_SINGLE_ACTION_SCHEDULE_TYPE = 3,
    CLASS_SINGLE_ACTION_SCHEDULE_EXECUTION_TIME = 4
} single_action_schedule_attributes_t;

/* IEC62056-62 A.1 */
typedef enum
{
    CLASS_IEC_LOCAL_PORT_SETUP_LOGICAL_NAME = 1,
    CLASS_IEC_LOCAL_PORT_SETUP_DEFAULT_MODE = 2,
    CLASS_IEC_LOCAL_PORT_SETUP_DEFAULT_BAUD = 3,
    CLASS_IEC_LOCAL_PORT_SETUP_PROP_BAUD = 4,
    CLASS_IEC_LOCAL_PORT_SETUP_RESPONSE_TIME = 5,
    CLASS_IEC_LOCAL_PORT_SETUP_DEVICE_ADDR = 6,
    CLASS_IEC_LOCAL_PORT_SETUP_PASS_P1 = 7,
    CLASS_IEC_LOCAL_PORT_SETUP_PASS_P2 = 8,
    CLASS_IEC_LOCAL_PORT_SETUP_PASS_P3 = 9
} iec_local_port_setup_attributes_t;

/* IEC62056-62 A.2 */
typedef enum
{
    CLASS_PSTN_MODEM_CONFIG_LOGICAL_NAME = 1,
    CLASS_PSTN_MODEM_CONFIG_COMM_SPEED = 2,
    CLASS_PSTN_MODEM_CONFIG_INITIALIZATION_STRING = 3,
    CLASS_PSTN_MODEM_CONFIG_MODEM_PROFILE = 4
} pstn_modem_config_attributes_t;

/* IEC62056-62 A.3 */
typedef enum
{
    CLASS_PSTN_AUTO_ANSWER_LOGICAL_NAME = 1,
    CLASS_PSTN_AUTO_ANSWER_MODE = 2,
    CLASS_PSTN_AUTO_ANSWER_LISTENING_WINDOW = 3,
    CLASS_PSTN_AUTO_ANSWER_STATUS = 4,
    CLASS_PSTN_AUTO_ANSWER_NUMBER_OF_CALLS = 5,
    CLASS_PSTN_AUTO_ANSWER_NUMBER_OF_RINGS = 6
} pstn_auto_answer_attributes_t;

/* IEC62056-62 A.4 */
typedef enum
{
    CLASS_PSTN_AUTO_DIAL_LOGICAL_NAME = 1,
    CLASS_PSTN_AUTO_DIAL_MODE = 2,
    CLASS_PSTN_AUTO_DIAL_REPITIIONS = 3,
    CLASS_PSTN_AUTO_DIAL_REPITITION_DELAY = 4,
    CLASS_PSTN_AUTO_DIAL_CALLING_WINDOW = 5,
    CLASS_PSTN_AUTO_DIAL_PHONE_LIST = 6
} pstn_auto_dial_attributes_t;

/* IEC62056-62 A.5 */
typedef enum
{
    CLASS_IEC_HDLC_SETUP_LOGICAL_NAME = 1,
    CLASS_IEC_HDLC_SETUP_COMM_SPEED = 2,
    CLASS_IEC_HDLC_SETUP_WINDOW_SIZE_TRANSMIT = 3,
    CLASS_IEC_HDLC_SETUP_WINDOW_SIZE_RECEIVE = 4,
    CLASS_IEC_HDLC_SETUP_MAX_INFO_FIELD_LENGTH_TRANSMIT = 5,
    CLASS_IEC_HDLC_SETUP_MAX_INFO_FIELD_LENGTH_RECEIVE = 6,
    CLASS_IEC_HDLC_SETUP_INTER_OCTET_TIMEOUT = 7,
    CLASS_IEC_HDLC_SETUP_INACTIVITY_TIMEOUT = 8,
    CLASS_IEC_HDLC_SETUP_DEVICE_ADDRESS = 9
} iec_hdlc_setup_attributes_t;

/* IEC62056-62 A.6 */
typedef enum
{
    CLASS_IEC_TWISTED_PAIR_SETUP_LOGICAL_NAME = 1,
    CLASS_IEC_TWISTED_PAIR_SETUP_SECONDARY_ADDRESS = 2,
    CLASS_IEC_TWISTED_PAIR_SETUP_PRIMARY_ADDRESS_LIST = 3,
    CLASS_IEC_TWISTED_PAIR_SETUP_TABI_LIST = 4,
    CLASS_IEC_TWISTED_PAIR_SETUP_FATAL_ERROR = 5
} iec_twisted_pair_setup_attributes_t;

typedef enum
{
    CLASS_SECURITY_SETUP_LOGICAL_NAME = 1,
    CLASS_SECURITY_SETUP_SECURITY_POLICY = 2,
    CLASS_SECURITY_SETUP_SECURITY_SUITE = 3,
    CLASS_SECURITY_SETUP_CLIENT_SYSTEM_TITLE = 4,
    CLASS_SECURITY_SETUP_SERVER_SYSTEM_TITLE = 5
} security_setup_attributes_t;

typedef enum
{
    CLASS_SECURITY_SETUP_SECURITY_ACTIVATE = 1,
    CLASS_SECURITY_SETUP_GLOBAL_KEY_TRANSFER = 2
} security_setup_methods_t;

typedef enum
{
    OBIS_GROUP_A_ABSTRACT_OBJECTS = 0,
    OBIS_GROUP_A_ELECTRICITY_OBJECTS = 1,
    OBIS_GROUP_A_HEAT_COST_OBJECTS = 4,
    OBIS_GROUP_A_COOLING_OBJECTS = 5,
    OBIS_GROUP_A_HEAT_OBJECTS = 6,
    OBIS_GROUP_A_GAS_OBJECTS = 7,
    OBIS_GROUP_A_COLD_WATER_OBJECTS = 8,
    OBIS_GROUP_A_HOT_WATER_OBJECTS = 9
    /* 10 to 255 are reserved */
} obis_group_a_t;

typedef enum
{
    OBIS_GROUP_B_NO_CHANNEL = 0,
    OBIS_GROUP_B_CHANNEL_1 = 1,
    /* 1 to 64 are for channels 1 to 64 */
    /* 65 to 127 are reserved */
    /* 128 to 254 are manufacturer specific */
    /* 255 is reserved */
} obis_group_b_t;

typedef enum
{
    OBIS_ABSTRACT_GROUP_C_GENERAL_PURPOSE_COSEM_OBJECTS = 0,
    OBIS_ABSTRACT_GROUP_C_COSEM_OBJECTS_OF_IC_CLOCK = 1,
    OBIS_ABSTRACT_GROUP_C_COSEM_OBJECTS_OF_IC_PSTN_MODEM_CONFIG = 2,
    OBIS_ABSTRACT_GROUP_C_COSEM_OBJECTS_OF_IC_SCRIPT_TABLE = 10,
    OBIS_ABSTRACT_GROUP_C_COSEM_OBJECTS_OF_IC_SPECIAL_DAYS_TABLE = 11,
    OBIS_ABSTRACT_GROUP_C_COSEM_OBJECTS_OF_IC_SCHEDULE = 12,
    OBIS_ABSTRACT_GROUP_C_COSEM_OBJECTS_OF_IC_ACTIVITY_CALENDAR = 13,
    OBIS_ABSTRACT_GROUP_C_COSEM_OBJECTS_OF_IC_REGISTER_ACTIVATION = 14,
    OBIS_ABSTRACT_GROUP_C_COSEM_OBJECTS_OF_IC_SINGLE_ACTION_SCHEDULE = 15,
    OBIS_ABSTRACT_GROUP_C_COSEM_OBJECTS_OF_IC_IEC_LOCAL_PORT_SETUP = 20,
    OBIS_ABSTRACT_GROUP_C_STANDARD_READOUT_DEFINITIONS = 21,
    OBIS_ABSTRACT_GROUP_C_COSEM_OBJECTS_OF_IC_IEC_HDLC_SETUP = 22,
    OBIS_ABSTRACT_GROUP_C_COSEM_OBJECTS_OF_IC_IEC_TWISTED_PAIR = 23,
    OBIS_ABSTRACT_GROUP_C_COSEM_OBJECTS_OF_IC_ASSOCIATION_SN_LN = 40,
    OBIS_ABSTRACT_GROUP_C_COSEM_OBJECTS_OF_IC_SAP_ASSIGNMENT = 41,
    OBIS_ABSTRACT_GROUP_C_COSEM_LOGICAL_DEVICE_NAME = 42,
    OBIS_ABSTRACT_GROUP_C_COSEM_OBJECTS_OF_IC_UTILITY_TABLES = 65,
    /* 0 to 89 are context specific identifiers */
    OBIS_ABSTRACT_GROUP_C_COUNTRY_SPECIFIC_IDENTIFIERS = 94,

    OBIS_ABSTRACT_GROUP_C_GENERAL_SERVICE_ENTRIES = 96,
    OBIS_ABSTRACT_GROUP_C_GENERAL_ERROR_MESSAGES = 97,
    OBIS_ABSTRACT_GROUP_C_GENERAL_LIST_OBJECTS = 98,
    OBIS_ABSTRACT_GROUP_C_INACTIVE_OBJECTS = 127,
    /* 128 to 254 are manufacturer specific */
    /* 255 is reserved */
    /* All others are reserved */
} obis_abstract_group_c_t;

typedef enum
{
    OBIS_ABSTRACT_SERVICE_ENTRIES_GROUP_D_DEVICE_ID_NUMBERS = 1,
    OBIS_ABSTRACT_SERVICE_ENTRIES_GROUP_D_PARAMETER_CHANGES = 2,
    OBIS_ABSTRACT_SERVICE_ENTRIES_GROUP_D_IO_CONTROL_SIGNALS = 3,
    OBIS_ABSTRACT_SERVICE_ENTRIES_GROUP_D_INTERNAL_CONTROL_SIGNALS = 4,
    OBIS_ABSTRACT_SERVICE_ENTRIES_GROUP_D_INTERNAL_OPERATING_STATUS = 5,
    OBIS_ABSTRACT_SERVICE_ENTRIES_GROUP_D_BATTERY_ENTRIES = 6,
    OBIS_ABSTRACT_SERVICE_ENTRIES_GROUP_D_NUMBER_OF_POWER_FAILURES = 7,
    OBIS_ABSTRACT_SERVICE_ENTRIES_GROUP_D_OPERATING_TIME = 8,
    /* 50 to 96 are manufacturer specific */
    OBIS_ABSTRACT_SERVICE_ENTRIES_GROUP_D_MANUFACTURER_SPECIFIC_START = 50,
    OBIS_ABSTRACT_SERVICE_ENTRIES_GROUP_D_MANUFACTURER_SPECIFIC_END = 96,
    /* All other codes are reserved */
} obis_abstract_service_entries_group_d_t;

typedef enum
{
    OBIS_ABSTRACT_SERVICE_ENTRIES_PARAMETER_CHANGE_GROUP_E_NUMBER_OF_CHANGES = 0,
    OBIS_ABSTRACT_SERVICE_ENTRIES_PARAMETER_CHANGE_GROUP_E_DATE_OF_LAST_CONFIG_CHANGE = 1,
    OBIS_ABSTRACT_SERVICE_ENTRIES_PARAMETER_CHANGE_GROUP_E_DATE_OF_LAST_TIMESWITCH_CHANGE = 2,
    OBIS_ABSTRACT_SERVICE_ENTRIES_PARAMETER_CHANGE_GROUP_E_DATE_OF_LIST_RIPPLE_CHANGE = 3,
    OBIS_ABSTRACT_SERVICE_ENTRIES_PARAMETER_CHANGE_GROUP_E_SECURITY_SWITCH_STATUS = 4,
    OBIS_ABSTRACT_SERVICE_ENTRIES_PARAMETER_CHANGE_GROUP_E_DATE_OF_LAST_CALIBRATION = 5,
    OBIS_ABSTRACT_SERVICE_ENTRIES_PARAMETER_CHANGE_GROUP_E_DATE_OF_NEXT_CONFIG_CHANGE = 6,
    OBIS_ABSTRACT_SERVICE_ENTRIES_PARAMETER_CHANGE_GROUP_E_NUMBER_OF_PROTECTED_CHANGES = 10,
    OBIS_ABSTRACT_SERVICE_ENTRIES_PARAMETER_CHANGE_GROUP_E_DATE_OF_LAST_PROTECTED_CHANGE = 11,
} obis_abstract_service_entries_parameter_change_group_e_t;

typedef enum
{
    OBIS_ABSTRACT_ERROR_MESSAGE_GROUP_D_ERROR_OBJECT = 97,
    /* All other codes are reserved */
} obis_abstract_error_message_group_d_t;

typedef enum
{
    OBIS_ELECTRICITY_GROUP_C_GENERAL_PURPOSE_OBJECT = 0,
    OBIS_ELECTRICITY_GROUP_C_ACTIVE_POWER_PLUS = 1,
    OBIS_ELECTRICITY_GROUP_C_ACTIVE_POWER_MINUS = 2,
    OBIS_ELECTRICITY_GROUP_C_REACTIVE_POWER_PLUS = 3,
    OBIS_ELECTRICITY_GROUP_C_REACTIVE_POWER_MINUS = 4,
    OBIS_ELECTRICITY_GROUP_C_REACTIVE_QI = 5,
    OBIS_ELECTRICITY_GROUP_C_REACTIVE_QII = 6,
    OBIS_ELECTRICITY_GROUP_C_REACTIVE_QIII = 7,
    OBIS_ELECTRICITY_GROUP_C_REACTIVE_QIV = 8,
    OBIS_ELECTRICITY_GROUP_C_APPARENT_POWER_PLUS = 9,
    OBIS_ELECTRICITY_GROUP_C_APPARENT_POWER_MINUS = 10,
    OBIS_ELECTRICITY_GROUP_C_CURRENT = 11,
    OBIS_ELECTRICITY_GROUP_C_VOLTAGE = 12,
    OBIS_ELECTRICITY_GROUP_C_AVERAGE_POWER_FACTOR = 13,
    OBIS_ELECTRICITY_GROUP_C_SUPPLY_FREQUENCY = 14,
    OBIS_ELECTRICITY_GROUP_C_ACTIVE_QI_QIV_QII_QIII = 15,
    OBIS_ELECTRICITY_GROUP_C_ACTIVE_QI_QIV_MINUS_QII_QIII = 16,
    OBIS_ELECTRICITY_GROUP_C_ACTIVE_QI = 17,
    OBIS_ELECTRICITY_GROUP_C_ACTIVE_QII = 18,
    OBIS_ELECTRICITY_GROUP_C_ACTIVE_QIII = 19,
    OBIS_ELECTRICITY_GROUP_C_ACTIVE_QIV = 20,

    OBIS_ELECTRICITY_GROUP_C_L1_ACTIVE_POWER_PLUS = 21,
    OBIS_ELECTRICITY_GROUP_C_L1_ACTIVE_POWER_MINUS = 22,
    OBIS_ELECTRICITY_GROUP_C_L1_REACTIVE_POWER_PLUS = 23,
    OBIS_ELECTRICITY_GROUP_C_L1_REACTIVE_POWER_MINUS = 24,
    OBIS_ELECTRICITY_GROUP_C_L1_REACTIVE_QI = 25,
    OBIS_ELECTRICITY_GROUP_C_L1_REACTIVE_QII = 26,
    OBIS_ELECTRICITY_GROUP_C_L1_REACTIVE_QIII = 27,
    OBIS_ELECTRICITY_GROUP_C_L1_REACTIVE_QIV = 28,
    OBIS_ELECTRICITY_GROUP_C_L1_APPARENT_POWER_PLUS = 29,
    OBIS_ELECTRICITY_GROUP_C_L1_APPARENT_POWER_MINUS = 30,
    OBIS_ELECTRICITY_GROUP_C_L1_CURRENT = 31,
    OBIS_ELECTRICITY_GROUP_C_L1_VOLTAGE = 32,
    OBIS_ELECTRICITY_GROUP_C_L1_AVERAGE_POWER_FACTOR = 33,
    OBIS_ELECTRICITY_GROUP_C_L1_SUPPLY_FREQUENCY = 34,
    OBIS_ELECTRICITY_GROUP_C_L1_ACTIVE_QI_QIV_QII_QIII = 35,
    OBIS_ELECTRICITY_GROUP_C_L1_ACTIVE_QI_QIV_MINUS_QII_QIII = 36,
    OBIS_ELECTRICITY_GROUP_C_L1_ACTIVE_QI = 37,
    OBIS_ELECTRICITY_GROUP_C_L1_ACTIVE_QII = 38,
    OBIS_ELECTRICITY_GROUP_C_L1_ACTIVE_QIII = 39,
    OBIS_ELECTRICITY_GROUP_C_L1_ACTIVE_QIV = 40,

    OBIS_ELECTRICITY_GROUP_C_L2_ACTIVE_POWER_PLUS = 41,
    OBIS_ELECTRICITY_GROUP_C_L2_ACTIVE_POWER_MINUS = 42,
    OBIS_ELECTRICITY_GROUP_C_L2_REACTIVE_POWER_PLUS = 43,
    OBIS_ELECTRICITY_GROUP_C_L2_REACTIVE_POWER_MINUS = 44,
    OBIS_ELECTRICITY_GROUP_C_L2_REACTIVE_QI = 45,
    OBIS_ELECTRICITY_GROUP_C_L2_REACTIVE_QII = 46,
    OBIS_ELECTRICITY_GROUP_C_L2_REACTIVE_QIII = 47,
    OBIS_ELECTRICITY_GROUP_C_L2_REACTIVE_QIV = 48,
    OBIS_ELECTRICITY_GROUP_C_L2_APPARENT_POWER_PLUS = 49,
    OBIS_ELECTRICITY_GROUP_C_L2_APPARENT_POWER_MINUS = 50,
    OBIS_ELECTRICITY_GROUP_C_L2_CURRENT = 51,
    OBIS_ELECTRICITY_GROUP_C_L2_VOLTAGE = 52,
    OBIS_ELECTRICITY_GROUP_C_L2_AVERAGE_POWER_FACTOR = 53,
    OBIS_ELECTRICITY_GROUP_C_L2_SUPPLY_FREQUENCY = 54,
    OBIS_ELECTRICITY_GROUP_C_L2_ACTIVE_QI_QIV_QII_QIII = 55,
    OBIS_ELECTRICITY_GROUP_C_L2_ACTIVE_QI_QIV_MINUS_QII_QIII = 56,
    OBIS_ELECTRICITY_GROUP_C_L2_ACTIVE_QI = 57,
    OBIS_ELECTRICITY_GROUP_C_L2_ACTIVE_QII = 58,
    OBIS_ELECTRICITY_GROUP_C_L2_ACTIVE_QIII = 59,
    OBIS_ELECTRICITY_GROUP_C_L2_ACTIVE_QIV = 60,

    OBIS_ELECTRICITY_GROUP_C_L3_ACTIVE_POWER_PLUS = 61,
    OBIS_ELECTRICITY_GROUP_C_L3_ACTIVE_POWER_MINUS = 62,
    OBIS_ELECTRICITY_GROUP_C_L3_REACTIVE_POWER_PLUS = 63,
    OBIS_ELECTRICITY_GROUP_C_L3_REACTIVE_POWER_MINUS = 64,
    OBIS_ELECTRICITY_GROUP_C_L3_REACTIVE_QI = 65,
    OBIS_ELECTRICITY_GROUP_C_L3_REACTIVE_QII = 66,
    OBIS_ELECTRICITY_GROUP_C_L3_REACTIVE_QIII = 67,
    OBIS_ELECTRICITY_GROUP_C_L3_REACTIVE_QIV = 68,
    OBIS_ELECTRICITY_GROUP_C_L3_APPARENT_POWER_PLUS = 69,
    OBIS_ELECTRICITY_GROUP_C_L3_APPARENT_POWER_MINUS = 70,
    OBIS_ELECTRICITY_GROUP_C_L3_CURRENT = 71,
    OBIS_ELECTRICITY_GROUP_C_L3_VOLTAGE = 72,
    OBIS_ELECTRICITY_GROUP_C_L3_AVERAGE_POWER_FACTOR = 73,
    OBIS_ELECTRICITY_GROUP_C_L3_SUPPLY_FREQUENCY = 74,
    OBIS_ELECTRICITY_GROUP_C_L3_ACTIVE_QI_QIV_QII_QIII = 75,
    OBIS_ELECTRICITY_GROUP_C_L3_ACTIVE_QI_QIV_MINUS_QII_QIII = 76,
    OBIS_ELECTRICITY_GROUP_C_L3_ACTIVE_QI = 77,
    OBIS_ELECTRICITY_GROUP_C_L3_ACTIVE_QII = 78,
    OBIS_ELECTRICITY_GROUP_C_L3_ACTIVE_QIII = 79,
    OBIS_ELECTRICITY_GROUP_C_L3_ACTIVE_QIV = 80,
    
    OBIS_ELECTRICITY_GROUP_C_ANGLES = 81,
    OBIS_ELECTRICITY_GROUP_C_UNITLESS_QUANTITY = 82,

    OBIS_ELECTRICITY_GROUP_C_NEUTRAL_CURRENT = 91,
    OBIS_ELECTRICITY_GROUP_C_NEUTRAL_VOLTAGE = 92,

    OBIS_ELECTRICITY_GROUP_C_SERVICE_ENTRIES = 96,
    OBIS_ELECTRICITY_GROUP_C_ERROR_MESSAGES = 97,
    OBIS_ELECTRICITY_GROUP_C_LIST = 98,
    OBIS_ELECTRICITY_GROUP_C_DATA_PROFILE = 99,
    /* 128 to 254 are manufacturer specific */
    /* 255 is reserved */
} obis_electricity_group_c_t;

typedef enum
{
    OBIS_ELECTRICITY_GROUP_D_BILLING_PERIOD_AVERAGE = 0,
    OBIS_ELECTRICITY_GROUP_D_CUMULATIVE_MINIMUM_1 = 1,
    OBIS_ELECTRICITY_GROUP_D_CUMULATIVE_MAXIMUM_1 = 2,
    OBIS_ELECTRICITY_GROUP_D_MINIMUM_1 = 3,
    OBIS_ELECTRICITY_GROUP_D_CURRENT_AVERAGE_1 = 4,
    OBIS_ELECTRICITY_GROUP_D_LAST_AVERAGE_1 = 5,
    OBIS_ELECTRICITY_GROUP_D_MAXIMUM_1 = 6,
    OBIS_ELECTRICITY_GROUP_D_INSTANTANEOUS_VALUE = 7,
    OBIS_ELECTRICITY_GROUP_D_TIME_INTEGRAL_1 = 8,
    OBIS_ELECTRICITY_GROUP_D_TIME_INTEGRAL_2 = 9,
    OBIS_ELECTRICITY_GROUP_D_TIME_INTEGRAL_3 = 10,

    OBIS_ELECTRICITY_GROUP_D_CUMULATIVE_MINIMUM_2 = 11,
    OBIS_ELECTRICITY_GROUP_D_CUMULATIVE_MAXIMUM_2 = 12,
    OBIS_ELECTRICITY_GROUP_D_MINIMUM_2 = 13,
    OBIS_ELECTRICITY_GROUP_D_CURRENT_AVERAGE_2 = 14,
    OBIS_ELECTRICITY_GROUP_D_LAST_AVERAGE_2 = 15,
    OBIS_ELECTRICITY_GROUP_D_MAXIMUM_2 = 16,

    OBIS_ELECTRICITY_GROUP_D_CUMULATIVE_MINIMUM_3 = 21,
    OBIS_ELECTRICITY_GROUP_D_CUMULATIVE_MAXIMUM_3 = 22,
    OBIS_ELECTRICITY_GROUP_D_MINIMUM_3 = 23,
    OBIS_ELECTRICITY_GROUP_D_CURRENT_AVERAGE_3 = 24,
    OBIS_ELECTRICITY_GROUP_D_LAST_AVERAGE_3 = 25,
    OBIS_ELECTRICITY_GROUP_D_MAXIMUM_3 = 26,

    OBIS_ELECTRICITY_GROUP_D_CURRENT_AVERAGE_5 = 27,
    OBIS_ELECTRICITY_GROUP_D_CURRENT_AVERAGE_6 = 28,
    OBIS_ELECTRICITY_GROUP_D_TIME_INTEGRAL_5 = 29,
    OBIS_ELECTRICITY_GROUP_D_TIME_INTEGRAL_6 = 30,
    
    OBIS_ELECTRICITY_GROUP_D_UNDER_LIMIT_THRESHOLD = 31,
    OBIS_ELECTRICITY_GROUP_D_UNDER_LIMIT_OCCURRENCE_COUNTER = 32,
    OBIS_ELECTRICITY_GROUP_D_UNDER_LIMIT_DURATION = 33,
    OBIS_ELECTRICITY_GROUP_D_UNDER_LIMIT_MAGNITUDE = 34,
    OBIS_ELECTRICITY_GROUP_D_OVER_LIMIT_THRESHOLD = 35,
    OBIS_ELECTRICITY_GROUP_D_OVER_LIMIT_OCCURRENCE_COUNTER = 36,
    OBIS_ELECTRICITY_GROUP_D_OVER_LIMIT_DURATION = 37,
    OBIS_ELECTRICITY_GROUP_D_OVER_LIMIT_MAGNITUDE = 38,
    OBIS_ELECTRICITY_GROUP_D_MISSING_THRESHOLD = 39,
    OBIS_ELECTRICITY_GROUP_D_MISSING_OCCURRENCE_COUNTER = 40,
    OBIS_ELECTRICITY_GROUP_D_MISSING_DURATION = 41,
    OBIS_ELECTRICITY_GROUP_D_MISSING_MAGNITUDE = 42,

    OBIS_ELECTRICITY_GROUP_D_TEST_AVERAGE = 55,

    OBIS_ELECTRICITY_GROUP_D_TIME_INTEGRAL_4 = 58,
    /* 128 to 254 are manufacturer specific */
    /* All other codes are reserved */
} obis_electricity_group_d_t;

typedef enum
{
    OBIS_ELECTRICITY_GENERAL_PURPOSE_GROUP_D_ELECTRICITY_ID = 0,
    OBIS_ELECTRICITY_GENERAL_PURPOSE_GROUP_D_BILLING_PERIOD_COUNTER = 1,
    OBIS_ELECTRICITY_GENERAL_PURPOSE_GROUP_D_PROGRAM_ENTRY = 2,
    OBIS_ELECTRICITY_GENERAL_PURPOSE_GROUP_D_OUTPUT_PULSE_CONSTANT = 3,
    OBIS_ELECTRICITY_GENERAL_PURPOSE_GROUP_D_RATIO = 4,
    OBIS_ELECTRICITY_GENERAL_PURPOSE_GROUP_D_NOMINAL_VALUE = 6,
    OBIS_ELECTRICITY_GENERAL_PURPOSE_GROUP_D_INPUT_PULSE_CONSTANT = 7,
    OBIS_ELECTRICITY_GENERAL_PURPOSE_GROUP_D_MEASUREMENT_PERIOD_DURATION = 8,
    OBIS_ELECTRICITY_GENERAL_PURPOSE_GROUP_D_TIME_ENTRY = 9,
    OBIS_ELECTRICITY_GENERAL_PURPOSE_GROUP_D_COEFFICIENT = 10,
    OBIS_ELECTRICITY_GENERAL_PURPOSE_GROUP_D_MEASUREMENT_METHOD = 11,
} obis_electricity_general_purpose_group_d_t;

typedef enum
{
    /* These codes follow the IDD prefix for the respective country */
    OBIS_COUNTRY_SPECIFIC_GROUP_D_FINNISH = 0,
    OBIS_COUNTRY_SPECIFIC_GROUP_D_USA = 1,
    OBIS_COUNTRY_SPECIFIC_GROUP_D_CANADIAN = 2,
    OBIS_COUNTRY_SPECIFIC_GROUP_D_RUSSIAN = 7,
    OBIS_COUNTRY_SPECIFIC_GROUP_D_CZECH = 10,
    OBIS_COUNTRY_SPECIFIC_GROUP_D_BULGARIAN = 11,
    OBIS_COUNTRY_SPECIFIC_GROUP_D_CROATIAN = 12,
    OBIS_COUNTRY_SPECIFIC_GROUP_D_IRISH = 13,
    OBIS_COUNTRY_SPECIFIC_GROUP_D_ISRAELI = 14,
    OBIS_COUNTRY_SPECIFIC_GROUP_D_UKRAINE = 15,
    OBIS_COUNTRY_SPECIFIC_GROUP_D_YUGOSLAVIAN = 16,
    OBIS_COUNTRY_SPECIFIC_GROUP_D_SOUTH_AFRICAN = 27,
    OBIS_COUNTRY_SPECIFIC_GROUP_D_GREEK = 30,
    OBIS_COUNTRY_SPECIFIC_GROUP_D_DUTCH = 31,
    OBIS_COUNTRY_SPECIFIC_GROUP_D_BELGIAN = 32,
    OBIS_COUNTRY_SPECIFIC_GROUP_D_FRENCH = 33,
    OBIS_COUNTRY_SPECIFIC_GROUP_D_SPANISH = 34,
    OBIS_COUNTRY_SPECIFIC_GROUP_D_PORTUGUESE = 35,
    OBIS_COUNTRY_SPECIFIC_GROUP_D_HUNGARIAN = 36,
    OBIS_COUNTRY_SPECIFIC_GROUP_D_SLOVENIAN = 38,
    OBIS_COUNTRY_SPECIFIC_GROUP_D_ITALIAN = 39,
    OBIS_COUNTRY_SPECIFIC_GROUP_D_ROMANIAN = 40,
    OBIS_COUNTRY_SPECIFIC_GROUP_D_SWISS = 41,
    OBIS_COUNTRY_SPECIFIC_GROUP_D_SLOVAKIAN = 42,
    OBIS_COUNTRY_SPECIFIC_GROUP_D_AUSTRIAN = 43,
    OBIS_COUNTRY_SPECIFIC_GROUP_D_UNITED_KINGDOM = 44,
    OBIS_COUNTRY_SPECIFIC_GROUP_D_DANISH = 45,
    OBIS_COUNTRY_SPECIFIC_GROUP_D_SWEDISH = 46,
    OBIS_COUNTRY_SPECIFIC_GROUP_D_NORWEGIAN = 47,
    OBIS_COUNTRY_SPECIFIC_GROUP_D_POLISH = 48,
    OBIS_COUNTRY_SPECIFIC_GROUP_D_GERMAN = 49,
    OBIS_COUNTRY_SPECIFIC_GROUP_D_BRAZILIAN = 55,
    OBIS_COUNTRY_SPECIFIC_GROUP_D_AUSTRALIAN = 61,
    OBIS_COUNTRY_SPECIFIC_GROUP_D_INDONESIAN = 62,
    OBIS_COUNTRY_SPECIFIC_GROUP_D_NEW_ZEALAND = 64,
    OBIS_COUNTRY_SPECIFIC_GROUP_D_SINGAPORE = 65,
    OBIS_COUNTRY_SPECIFIC_GROUP_D_JAPANESE = 81,
    OBIS_COUNTRY_SPECIFIC_GROUP_D_CHINESE = 86,
    OBIS_COUNTRY_SPECIFIC_GROUP_D_TURKISH = 90,
    OBIS_COUNTRY_SPECIFIC_GROUP_D_INDIAN = 91,
    /* All other codes are reserved */
} obis_country_specific_group_d_t;

typedef enum
{
    OBIS_ELECTRICITY_GROUP_E_TOTAL = 0,
    OBIS_ELECTRICITY_GROUP_E_RATE_1 = 1,
    /* 1 to 63 are for rates 1 to 63 */
    /* 128 to 254 are manufacturer specific */
    /* 255 is reserved */
} obis_electricity_group_e_t;

typedef enum
{
    OBIS_ELECTRICITY_EXTENDED_GROUP_E_TOTAL = 0,
    OBIS_ELECTRICITY_EXTENDED_GROUP_E_1ST_HARMONIC = 1,
    OBIS_ELECTRICITY_EXTENDED_GROUP_E_2ND_HARMONIC = 2,
    OBIS_ELECTRICITY_EXTENDED_GROUP_E_3RD_HARMONIC = 3,
    OBIS_ELECTRICITY_EXTENDED_GROUP_E_4TH_HARMONIC = 4,
    OBIS_ELECTRICITY_EXTENDED_GROUP_E_5TH_HARMONIC = 5,
    OBIS_ELECTRICITY_EXTENDED_GROUP_E_6TH_HARMONIC = 6,
    OBIS_ELECTRICITY_EXTENDED_GROUP_E_7TH_HARMONIC = 7,
    OBIS_ELECTRICITY_EXTENDED_GROUP_E_8TH_HARMONIC = 8,
    OBIS_ELECTRICITY_EXTENDED_GROUP_E_9TH_HARMONIC = 9,
    /* 1 to 127 are for harmonics 1 to 127 */
    /* 128 to 254 are manufacturer specific */
    /* 255 is reserved */
} obis_electricity_extended_group_e_t;

typedef enum
{
    OBIS_BILLING_PERIOD_GROUP_F_FUTURE_PERIOD = 0,
    OBIS_BILLING_PERIOD_GROUP_F_PERIOD_1 = 1,

    OBIS_BILLING_PERIOD_GROUP_F_MOST_RECENT = 101,
    OBIS_BILLING_PERIOD_GROUP_F_2_MOST_RECENT = 102,
    /* 103 to 125 are for 3 most recent to 25 most recent */
    OBIS_BILLING_PERIOD_GROUP_F_UNSPECIFIED_MOST_RECENT = 126,
    OBIS_BILLING_PERIOD_GROUP_F_UNSPECIFIED = 255,
} obis_billing_periods_group_f_t;

typedef enum
{
    OBIS_UNIT_TIME_YEAR = 1,
    OBIS_UNIT_TIME_MONTH = 2,
    OBIS_UNIT_TIME_WEEK = 3,
    OBIS_UNIT_TIME_DAY = 4,
    OBIS_UNIT_TIME_HOUR = 5,
    OBIS_UNIT_TIME_MINUTE = 6,
    OBIS_UNIT_TIME_SECOND = 7,
    OBIS_UNIT_ANGLE_DEGREE = 8,
    OBIS_UNIT_TEMPERATURE_DEGREE_CENTIGRADE = 9,
    OBIS_UNIT_CURRENCY_LOCAL = 10,
    OBIS_UNIT_LENGTH_METRE = 11,
    OBIS_UNIT_SPEED_METRE_PER_SECOND = 12,
    OBIS_UNIT_VOLUME_CUBIC_METRE = 13,
    OBIS_UNIT_CORRECTED_VOLUME_CUBIC_METRE = 14,
    OBIS_UNIT_VOLUME_FLUX_CUBIC_METRE_PER_HOUR = 15,
    OBIS_UNIT_CORRECTED_VOLUME_FLUX_CUBIC_METRE_PER_HOUR = 16,
    OBIS_UNIT_VOLUME_FLUX_CUBIC_METRE_PER_DAY = 17,
    OBIS_UNIT_CORRECTED_VOLUME_FLUX_CUBIC_METRE_PER_DAY = 18,
    OBIS_UNIT_VOLUME_MILLI_CUBIC_METRE = 19,
    OBIS_UNIT_MASS_KILOGRAM = 20,
    OBIS_UNIT_FORCE_NEWTON = 21,
    OBIS_UNIT_ENERGY_NEWTON_METRE = 22,
    OBIS_UNIT_PRESSURE_PASCAL = 23,
    OBIS_UNIT_PRESSURE_BAR = 24,
    OBIS_UNIT_ENERGY_JOULE = 25,
    OBIS_UNIT_THERMAL_POWER_JOULE_PER_HOUR = 26,
    OBIS_UNIT_ACTIVE_POWER_WATT = 27,
    OBIS_UNIT_APPARENT_POWER_VA = 28,
    OBIS_UNIT_REACTIVE_POWER_VAR = 29,
    OBIS_UNIT_ACTIVE_ENERGY_WATT_HOUR = 30,
    OBIS_UNIT_APPARENT_ENERGY_VA_HOUR = 31,
    OBIS_UNIT_REACTIVE_ENERGY_VAR_HOUR = 32,
    OBIS_UNIT_CURRENT_AMPERE = 33,
    OBIS_UNIT_ELECTRICAL_CHARGE_COULOMB = 34,
    OBIS_UNIT_VOLTAGE_VOLT = 35,
    OBIS_UNIT_ELECTRICAL_FIELD_STRENGTH_VOLT_PER_METRE = 36,
    OBIS_UNIT_CAPACITANCE_FARAD = 37,
    OBIS_UNIT_RESISTANCE_OHM = 38,
    OBIS_UNIT_RESISTIVITY_OHM_METRE = 39,
    OBIS_UNIT_MAGNETIC_FLUX_WEBER = 40,
    OBIS_UNIT_INDUCTION_TESLA = 41,
    OBIS_UNIT_MAGNETIC_FIELD_STRENGTH_AMPERE_PER_METRE = 42,
    OBIS_UNIT_INDUCTANCE_HENRY = 43,
    OBIS_UNIT_FREQUENCY_HERTZ = 44,
    OBIS_UNIT_ACTIVE_ENERGY_METER_CONSTANT = 45,
    OBIS_UNIT_REACTIVE_ENERGY_METER_CONSTANT = 46,
    OBIS_UNIT_APPARENT_ENERGY_METER_CONSTANT = 47,
    OBIS_UNIT_VOLTAGE_SQUARE_HOUR = 48,
    OBIS_UNIT_AMPERE_SQUARE_HOUR = 49,
    OBIS_UNIT_MASS_FLUX_KILOGRAM_PER_SECOND = 50,
    OBIS_UNIT_CONDUCTANCE_SIEMENS = 51,
    OBIS_UNIT_PERCENT = 56, /* not found in the standard. added for compatability with current data concentrator*/
    OBIS_UNIT_UNITLESS_COUNT = 255
} unit_t;

#if defined(__cplusplus)
extern "C"
{
#endif

const char *class_data_attribute_to_str(int attribute_id);

const char *class_register_attribute_to_str(int attribute_id);

const char *class_extended_register_attribute_to_str(int attribute_id);

const char *class_demand_register_attribute_to_str(int attribute_id);

const char *class_register_activation_attribute_to_str(int attribute_id);

const char *class_profile_generic_attribute_to_str(int attribute_id);

const char *class_clock_attribute_to_str(int attribute_id);

const char *class_script_table_attribute_to_str(int attribute_id);

const char *class_schedule_attribute_to_str(int attribute_id);

const char *class_special_days_attribute_to_str(int attribute_id);

const char *class_activity_calendar_attribute_to_str(int attribute_id);

const char *class_association_ln_attribute_to_str(int attribute_id);

const char *class_association_sn_attribute_to_str(int attribute_id);

const char *class_sap_assignment_attribute_to_str(int attribute_id);

const char *class_register_monitor_attribute_to_str(int attribute_id);

const char *class_utility_tables_attribute_to_str(int attribute_id);

const char *class_single_action_schedule_attribute_to_str(int attribute_id);

const char *class_iec_local_port_setup_attribute_to_str(int attribute_id);

const char *class_pstn_modem_config_attribute_to_str(int attribute_id);

const char *class_pstn_auto_answer_attribute_to_str(int attribute_id);

const char *class_pstn_auto_dial_attribute_to_str(int attribute_id);

const char *class_iec_hdlc_setup_attribute_to_str(int attribute_id);

const char *class_iec_twisted_pair_setup_attribute_to_str(int attribute_id);

const char *class_id_attribute_to_str(int class_id, int attribute_id);

const char *class_id_to_str(int class_id);

void display_obis_name(const uint8_t msg[]);

#if defined(__cplusplus)
}
#endif

#endif

/*- End of file ------------------------------------------------------------*/
